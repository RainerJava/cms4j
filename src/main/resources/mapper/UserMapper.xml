<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ACCOUNT">
    <resultMap id="userDetailMap" type="User">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="status" column="status"/>
        <result property="emailStatus" column="email_status"/>
        <result property="avatarStatus" column="avatar_status"/>
        <result property="photoURL" column="photo_url"/>
        <result property="timeOffset" column="time_offset"/>
        <result property="lastIP" column="last_ip"/>
        <result property="lastTime" column="last_time"/>
        <result property="lastActTime" column="last_act_time"/>
        <result property="lastModifiedDate" column="last_modified_date"/>
        <result property="createdDate" column="created_date"/>
        <result property="deleted" column="deleted"/>
        <collection property="groupList" column="id" javaType="ArrayList" ofType="Group" resultMap="groupDetailMap" />
        <collection property="articleList" column="id" javaType="ArrayList" ofType="Article" resultMap="articleDetailMap" />
    </resultMap>

    <!--
         获取用户数量
     -->
    <select id="getUserCount" resultType="Long">
        select count(id)
        from cms_user
        limit 1
	</select>

    <!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
    <select id="getUser" parameterType="Long" resultMap="userDetailMap">
        select id,email,username,password,salt,status,email_status,avatar_status,photo_url,time_offset,
        last_ip,last_time,last_act_time,created_date,last_modified_date,deleted
        from cms_user
        where id=#{id}
    </select>

    <!--
         获取所有用户
     -->
    <select id="getAllUser" resultMap="userDetailMap">
        select id,email,username,password,salt,status,email_status,avatar_status,photo_url,time_offset,
        last_ip,last_time,last_act_time,created_date,last_modified_date,deleted
        from cms_user
    </select>

    <!--
         获取已标记为删除的用户id
     -->
    <select id="getDeletedUserId" resultType="Long">
        select id
        from cms_user
        where deleted=1
	</select>

    <!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
    <select id="searchUser" parameterType="map" resultMap="userDetailMap">
        select *
        from cms_user
        <where>
            <if test="email != null">
                email=#{email}
            </if>
            <if test="username != null">
                and username=#{username}
            </if>
            <if test="status != null">
                and status=#{status}
            </if>
            <if test="emailStatus != null">
                and email_status=#{emailStatus}
            </if>
        </where>
        order by ${Sort} ${Direction}
    </select>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="User">
        update cms_user
        set email=#{email},username=#{username},password=#{password},salt=#{salt},status=#{status},
        email_status=#{emailStatus},avatar_status=#{avatarStatus},deleted=#{deleted},photo_url=#{photoURL},
        time_offset=#{timeOffset},last_ip=#{lastIP},
        last_time=#{lastTime},last_act_time=#{lastActTime}
        where id = #{id}
	</update>
</mapper>